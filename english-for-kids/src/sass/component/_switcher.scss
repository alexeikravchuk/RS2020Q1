$brand-info: rgb(191, 224, 235);

// Switch config vars
$switch-height: 5rem;
$switch-width: $switch-height * 2;
$switch-gutter: $switch-height/12;
$switch-fillet: $switch-height;

$switch-background-color-off: rgb(213, 255, 196);
$switch-forground-color-off: lighten($switch-background-color-off, 10%);
$switch-background-gradient-off: none;
$switch-label-color-off: darken($switch-background-color-off, 55%);
$switch-background-shadow-off: 1px 1px 10px rgba(black, 0.2) inset;
$switch-forground-shadow-off: none;

$switch-background-color-on: $brand-info;
$switch-forground-color-on: $switch-forground-color-off;
$switch-background-gradient-on: linear-gradient(rgba(white, 0.15), rgba(black, 0.1));
$switch-label-color-on: #fff;
$switch-background-shadow-on: 1px 1px 10px rgba(rgb(0, 4, 255), 0.1) inset;
$switch-forground-shadow-on: 1px 1px 10px 0 rgba(rgb(109, 55, 88), 0.5);

$switch-label-offset: $switch-gutter * 1.3;
$switch-label-size: $switch-height * 0.45;
$switch-transition: all 0.1s ease-in-out;

@mixin switch-style($type: false, $onColor: false, $offColor: false) {
  @if $type {
    input[switch="#{$type}"] {
      @content;
      @if $offColor {
        & + label {
          background-color: $offColor;

          &:before {
            @if brightness($offColor) <= 69% {
              color: #fff !important;
            } @else {
              color: grayscale(invert($onColor)) !important;
            }
          }
        }
      }
      @if $onColor {
        &:checked + label {
          background-color: $onColor;

          &:before {
            @if brightness($onColor) <= 69% {
              color: #fff !important;
            } @else {
              color: grayscale(invert($onColor)) !important;
            }
          }
        }
      }
    }
  }
}
@mixin switch-base($height: $switch-height, $width: $switch-width) {
  input[switch] {
    display: none;

    & + label {
      font-size: 2em;
      line-height: 2em;
      width: $switch-width;
      height: $switch-height;
      background-color: $switch-background-color-off;
      background-image: $switch-background-gradient-off;
      border-radius: $switch-fillet;
      padding: $switch-gutter;
      cursor: pointer;
      display: inline-block;
      text-align: center;
      position: relative;
      box-shadow: $switch-background-shadow-off;
      font-family: inherit;
      transition: all 0.5s linear;

      &:before {
        /* Label */
        text-transform: uppercase;
        color: $switch-label-color-off;
        text-shadow: 1px 1px 5px white;
        content: attr(data-off-label);
        display: block;
        font-weight: 500;
        font-size: $switch-label-size;
        line-height: $switch-height - ($switch-label-offset*1.2);
        position: absolute;
        right: $switch-label-offset;
        margin: $switch-label-offset;
        top: 0;
        text-align: center;
        // outline: 1px dotted red;
        min-width: ($switch-width/2) - ($switch-gutter*2);
        overflow: hidden;
        transition: all 0.1s ease-in-out;
      }
      &:after {
        /* Slider */
        $sHeight: $switch-height - ($switch-gutter*2);
        content: '';
        position: absolute;
        left: $switch-gutter;
        background-color: $switch-forground-color-off;
        box-shadow: $switch-forground-shadow-off;
        border-radius: $switch-fillet;
        height: $sHeight;
        width: $sHeight;
        transition: all 0.3s ease-in-out;
      }
    }
    &:checked + label {
      background-color: $switch-background-color-on;
      background-image: $switch-background-gradient-on;
      box-shadow: $switch-background-shadow-on;

      &:before {
        text-shadow: 1px 1px 2px black;
        color: $switch-label-color-on;
        content: attr(data-on-label);
        right: auto;
        left: $switch-label-offset;
      }
      &:after {
        left: ($switch-width/2) + $switch-gutter;
        background-color: $switch-forground-color-on;
        box-shadow: $switch-forground-shadow-on;
      }
    }
  }
}
@include switch-base();